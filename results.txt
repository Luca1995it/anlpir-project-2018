New TESTS with AP-CNN, WikiQA,GoogleRed
Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> CUDA_ERRORNew TESTS with AP-CNN, WikiQA,GoogleRed
Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.579, MAP: 0.573, time: 206s)New TESTS with AP-CNN, WikiQA,GoogleRed
Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.566, MAP: 0.560, time: 205s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.558, MAP: 0.557, time: 395s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.573, MAP: 0.566, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.562, time: 394s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.565, MAP: 0.557, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.570, MAP: 0.565, time: -15s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.576, MAP: 0.572, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.576, MAP: 0.568, time: 394s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.587, MAP: 0.581, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.568, MAP: 0.563, time: 395s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.597, MAP: 0.592, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.583, MAP: 0.579, time: 395s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.576, MAP: 0.567, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.597, MAP: 0.593, time: 395s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.590, MAP: 0.583, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.548, MAP: 0.544, time: 394s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.608, MAP: 0.599, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.617, MAP: 0.611, time: 395s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.590, MAP: 0.585, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.598, MAP: 0.589, time: 394s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.575, MAP: 0.570, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.598, MAP: 0.594, time: 394s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.600, MAP: 0.593, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.587, MAP: 0.583, time: 394s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.639, MAP: 0.629, time: -367s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.647, MAP: 0.638, time: 395s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.659, MAP: 0.646, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.648, MAP: 0.640, time: 395s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.638, MAP: 0.628, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.602, MAP: 0.597, time: 395s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.648, MAP: 0.636, time: 203s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.643, MAP: 0.636, time: 394s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.563, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.564, MAP: 0.561, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.570, MAP: 0.566, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.571, MAP: 0.566, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.558, MAP: 0.552, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.591, MAP: 0.586, time: 401s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.579, MAP: 0.572, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.565, MAP: 0.561, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.574, MAP: 0.572, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.591, MAP: 0.587, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.570, MAP: 0.563, time: -365s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.579, MAP: 0.573, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.582, MAP: 0.577, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.583, MAP: 0.581, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.583, MAP: 0.580, time: 206s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.578, MAP: 0.573, time: 401s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.600, MAP: 0.592, time: 206s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.575, MAP: 0.571, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.604, MAP: 0.599, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.596, MAP: 0.591, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.586, MAP: 0.583, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.606, MAP: 0.602, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.577, MAP: 0.570, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.587, MAP: 0.585, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.642, MAP: 0.629, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.636, MAP: 0.624, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.648, MAP: 0.631, time: 207s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.670, MAP: 0.661, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.662, MAP: 0.648, time: -365s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.644, MAP: 0.632, time: 402s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.632, MAP: 0.624, time: 206s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.631, MAP: 0.625, time: 401s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.565, MAP: 0.561, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.556, MAP: 0.554, time: 371s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.560, MAP: 0.557, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.577, MAP: 0.570, time: 370s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.579, MAP: 0.573, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.560, MAP: 0.552, time: 371s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.562, MAP: 0.560, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.573, MAP: 0.563, time: 371s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.576, MAP: 0.571, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.585, MAP: 0.581, time: 370s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.586, MAP: 0.582, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.595, MAP: 0.590, time: 371s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.586, MAP: 0.582, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.599, MAP: 0.595, time: 370s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.567, MAP: 0.560, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.581, MAP: 0.578, time: -202s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.623, MAP: 0.617, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.601, MAP: 0.592, time: 370s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.598, MAP: 0.591, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.607, MAP: 0.602, time: 370s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.591, MAP: 0.588, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.596, MAP: 0.590, time: 370s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.608, MAP: 0.598, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.593, MAP: 0.588, time: 371s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.652, MAP: 0.644, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.643, MAP: 0.631, time: 371s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.612, MAP: 0.605, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.613, MAP: 0.606, time: 371s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.677, MAP: 0.668, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.682, MAP: 0.669, time: 371s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.645, MAP: 0.633, time: 191s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.637, MAP: 0.624, time: 370s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.562, MAP: 0.562, time: 195s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.552, MAP: 0.547, time: 378s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.554, MAP: 0.547, time: -377s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.563, MAP: 0.557, time: 378s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.571, MAP: 0.565, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.566, MAP: 0.563, time: 377s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.578, MAP: 0.572, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.563, MAP: 0.559, time: 377s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.579, MAP: 0.574, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.594, MAP: 0.585, time: 377s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.576, MAP: 0.571, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.594, MAP: 0.590, time: 378s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.593, MAP: 0.583, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.594, MAP: 0.589, time: 377s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.585, MAP: 0.582, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.605, MAP: 0.598, time: 377s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.598, MAP: 0.591, time: 195s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.611, MAP: 0.600, time: 378s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.609, MAP: 0.603, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.600, MAP: 0.597, time: 378s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.602, MAP: 0.596, time: 195s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.619, MAP: 0.608, time: -194s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.594, MAP: 0.594, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.579, MAP: 0.573, time: 377s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.633, MAP: 0.618, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.637, MAP: 0.623, time: 377s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.684, MAP: 0.669, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.652, MAP: 0.638, time: 377s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.577, MAP: 0.568, time: 195s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.667, MAP: 0.656, time: 377s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.618, MAP: 0.610, time: 194s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.659, MAP: 0.648, time: 377s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.561, MAP: 0.554, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.562, MAP: 0.556, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.590, MAP: 0.584, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.576, MAP: 0.573, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.568, MAP: 0.562, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.572, MAP: 0.567, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.556, MAP: 0.550, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.562, MAP: 0.557, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.571, MAP: 0.568, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.597, MAP: 0.591, time: -208s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.585, MAP: 0.580, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.597, MAP: 0.589, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.581, MAP: 0.577, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.563, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.565, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.583, MAP: 0.582, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.618, MAP: 0.609, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.597, MAP: 0.595, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.610, MAP: 0.607, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.610, MAP: 0.606, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.614, MAP: 0.602, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.611, MAP: 0.605, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.593, MAP: 0.586, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.599, MAP: 0.595, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.643, MAP: 0.630, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.644, MAP: 0.633, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.673, MAP: 0.659, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.641, MAP: 0.633, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.616, MAP: 0.605, time: -385s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.644, MAP: 0.633, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.645, MAP: 0.632, time: 187s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.636, MAP: 0.631, time: 362s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.562, MAP: 0.557, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.555, MAP: 0.554, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.553, MAP: 0.547, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.583, MAP: 0.577, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.572, MAP: 0.567, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.560, MAP: 0.554, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.536, MAP: 0.531, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.564, MAP: 0.558, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.572, MAP: 0.569, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.586, MAP: 0.582, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.586, MAP: 0.581, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.588, MAP: 0.581, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.579, MAP: 0.577, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.571, MAP: 0.566, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.572, MAP: 0.566, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.545, MAP: 0.542, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.583, MAP: 0.576, time: -382s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.592, MAP: 0.588, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.603, MAP: 0.598, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.589, MAP: 0.584, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.594, MAP: 0.591, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.605, MAP: 0.596, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.603, MAP: 0.600, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.588, MAP: 0.583, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.658, MAP: 0.644, time: 191s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.630, MAP: 0.618, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.626, MAP: 0.614, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.680, MAP: 0.666, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.641, MAP: 0.630, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.654, MAP: 0.646, time: 369s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.645, MAP: 0.635, time: 190s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.640, MAP: 0.629, time: 369s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.564, MAP: 0.559, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.565, MAP: 0.560, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.561, MAP: 0.551, time: -301s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.567, MAP: 0.562, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.558, MAP: 0.554, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.573, MAP: 0.567, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.578, MAP: 0.567, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.577, MAP: 0.570, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.579, MAP: 0.575, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.573, MAP: 0.568, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.588, MAP: 0.581, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.566, MAP: 0.564, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.584, MAP: 0.577, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.582, MAP: 0.573, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.553, MAP: 0.553, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.578, MAP: 0.574, time: -39s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.597, MAP: 0.594, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.593, MAP: 0.585, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.570, MAP: 0.570, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.575, MAP: 0.573, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.596, MAP: 0.591, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.585, MAP: 0.578, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.592, MAP: 0.586, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.591, MAP: 0.581, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.632, MAP: 0.622, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.606, MAP: 0.597, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.672, MAP: 0.664, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.651, MAP: 0.640, time: 531s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.652, MAP: 0.639, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.668, MAP: 0.658, time: -40s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.655, MAP: 0.647, time: 271s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.681, MAP: 0.669, time: 530s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.542, MAP: 0.538, time: 276s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.562, MAP: 0.556, time: 541s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.557, MAP: 0.549, time: 276s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.580, MAP: 0.577, time: 541s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.563, time: 276s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.566, MAP: 0.562, time: 541s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.563, MAP: 0.557, time: 276s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.571, MAP: 0.567, time: 541s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.568, MAP: 0.561, time: 276s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.585, MAP: 0.577, time: 541s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.554, MAP: 0.550, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.565, MAP: 0.562, time: -26s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.566, MAP: 0.564, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.564, time: 541s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.561, MAP: 0.557, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.580, MAP: 0.570, time: 544s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.603, MAP: 0.598, time: 283s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.599, MAP: 0.596, time: 548s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.595, MAP: 0.589, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.607, MAP: 0.599, time: 542s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.594, MAP: 0.594, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.586, MAP: 0.578, time: 542s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.586, MAP: 0.584, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.589, MAP: 0.587, time: -25s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.648, MAP: 0.636, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.591, MAP: 0.579, time: 542s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.678, MAP: 0.669, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.651, MAP: 0.641, time: 542s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.667, MAP: 0.657, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.672, MAP: 0.661, time: 541s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.679, MAP: 0.663, time: 277s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.673, MAP: 0.662, time: 541s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.568, MAP: 0.564, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.564, MAP: 0.557, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.576, MAP: 0.570, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.571, MAP: 0.564, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.562, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.562, time: -64s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.572, MAP: 0.566, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.573, MAP: 0.568, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.572, MAP: 0.569, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.558, MAP: 0.557, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.574, MAP: 0.570, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.565, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.559, MAP: 0.559, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.579, MAP: 0.573, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.571, MAP: 0.565, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.564, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.586, MAP: 0.579, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.592, MAP: 0.586, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.600, MAP: 0.596, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.603, MAP: 0.598, time: -63s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.587, MAP: 0.585, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.585, MAP: 0.579, time: 503s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.599, MAP: 0.592, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.602, MAP: 0.593, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.612, MAP: 0.608, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.603, MAP: 0.593, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.650, MAP: 0.636, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.632, MAP: 0.623, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.665, MAP: 0.653, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.655, MAP: 0.647, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.659, MAP: 0.647, time: 257s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.667, MAP: 0.652, time: 502s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.568, MAP: 0.562, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.574, MAP: 0.567, time: -54s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.571, MAP: 0.564, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.563, MAP: 0.557, time: 512s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.568, MAP: 0.560, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.575, MAP: 0.567, time: 513s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.567, MAP: 0.561, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.579, MAP: 0.572, time: 512s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.574, MAP: 0.570, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.583, MAP: 0.576, time: 512s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.565, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.571, MAP: 0.565, time: 512s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.552, MAP: 0.549, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.574, MAP: 0.569, time: 513s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.584, MAP: 0.576, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.588, MAP: 0.584, time: -55s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.592, MAP: 0.589, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.590, MAP: 0.586, time: 513s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.583, MAP: 0.577, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.598, MAP: 0.590, time: 512s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.590, MAP: 0.584, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.575, MAP: 0.568, time: 513s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.581, MAP: 0.578, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.588, MAP: 0.586, time: 513s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.619, MAP: 0.610, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.614, MAP: 0.599, time: 513s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.656, MAP: 0.643, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.618, MAP: 0.607, time: 512s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.670, MAP: 0.659, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.663, MAP: 0.653, time: -54s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.676, MAP: 0.661, time: 262s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.668, MAP: 0.657, time: 512s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.562, MAP: 0.555, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.551, MAP: 0.548, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.578, MAP: 0.572, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.560, MAP: 0.555, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.564, MAP: 0.558, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.549, MAP: 0.543, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.566, MAP: 0.558, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.566, MAP: 0.562, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.560, MAP: 0.558, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.574, MAP: 0.568, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.559, MAP: 0.558, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.575, MAP: 0.569, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.565, time: -315s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.563, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.568, MAP: 0.561, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.569, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.578, MAP: 0.578, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.586, MAP: 0.582, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.587, MAP: 0.584, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.576, MAP: 0.572, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.575, MAP: 0.572, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.603, MAP: 0.595, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.597, MAP: 0.592, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.598, MAP: 0.592, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.629, MAP: 0.614, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.635, MAP: 0.627, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.652, MAP: 0.639, time: -314s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.625, MAP: 0.612, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.679, MAP: 0.670, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.671, MAP: 0.659, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.669, MAP: 0.658, time: 252s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.670, MAP: 0.656, time: 493s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.581, MAP: 0.574, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.558, MAP: 0.553, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.583, MAP: 0.571, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.561, MAP: 0.553, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.568, MAP: 0.562, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.570, MAP: 0.567, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.576, MAP: 0.568, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.577, MAP: 0.572, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.567, MAP: 0.562, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.575, MAP: 0.572, time: -63s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.580, MAP: 0.573, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.565, MAP: 0.560, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.573, MAP: 0.568, time: 258s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.572, MAP: 0.569, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.560, MAP: 0.556, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.565, MAP: 0.561, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.585, MAP: 0.575, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.609, MAP: 0.604, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.581, MAP: 0.578, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.591, MAP: 0.587, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.571, MAP: 0.566, time: 258s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.582, MAP: 0.574, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.580, MAP: 0.575, time: 258s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.579, MAP: 0.576, time: -63s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.662, MAP: 0.645, time: 257s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.629, MAP: 0.621, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.655, MAP: 0.647, time: 258s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.642, MAP: 0.634, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.653, MAP: 0.642, time: 258s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.659, MAP: 0.651, time: 503s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.670, MAP: 0.659, time: 258s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.678, MAP: 0.665, time: 503s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.570, MAP: 0.561, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.564, MAP: 0.557, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.571, MAP: 0.567, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.566, MAP: 0.560, time: 102s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.559, MAP: 0.550, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.551, MAP: 0.546, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.552, MAP: 0.544, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.559, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.587, MAP: 0.579, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.579, MAP: 0.573, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.574, MAP: 0.567, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.575, MAP: 0.569, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.563, MAP: 0.561, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.572, MAP: 0.568, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.565, MAP: 0.561, time: -226s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.568, MAP: 0.563, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.576, MAP: 0.570, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.598, MAP: 0.595, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.584, MAP: 0.577, time: 340s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.603, MAP: 0.594, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.605, MAP: 0.598, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.583, MAP: 0.577, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.577, MAP: 0.572, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.587, MAP: 0.582, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.617, MAP: 0.607, time: 340s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.570, MAP: 0.564, time: 102s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.632, MAP: 0.625, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.627, MAP: 0.617, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.649, MAP: 0.638, time: 340s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.662, MAP: 0.653, time: 669s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.662, MAP: 0.649, time: 341s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.644, MAP: 0.634, time: 668s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.579, MAP: 0.569, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.573, MAP: 0.565, time: 682s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.540, MAP: 0.535, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.560, time: 115s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.565, MAP: 0.557, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.566, MAP: 0.558, time: 682s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.559, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.549, MAP: 0.542, time: 682s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.577, MAP: 0.570, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.581, MAP: 0.573, time: 683s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.589, MAP: 0.582, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.582, MAP: 0.574, time: 682s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.565, MAP: 0.557, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.580, MAP: 0.575, time: 683s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.566, MAP: 0.563, time: -219s)Round - ( k:5, batch_size: 2, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.574, MAP: 0.567, time: 682s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.583, MAP: 0.581, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.585, MAP: 0.582, time: 683s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.584, MAP: 0.581, time: 348s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.591, MAP: 0.584, time: 683s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.576, MAP: 0.570, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.586, MAP: 0.582, time: 683s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.583, MAP: 0.577, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.588, MAP: 0.582, time: 683s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.586, MAP: 0.577, time: 348s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.595, MAP: 0.586, time: 115s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.624, MAP: 0.617, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.623, MAP: 0.615, time: 682s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.672, MAP: 0.660, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.668, MAP: 0.659, time: 682s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.658, MAP: 0.649, time: 347s)Round - ( k:5, batch_size: 2, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.661, MAP: 0.647, time: 682s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.580, MAP: 0.573, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.556, MAP: 0.549, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.554, MAP: 0.548, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.565, MAP: 0.558, time: 71s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.563, MAP: 0.554, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.557, MAP: 0.551, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.556, MAP: 0.548, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.556, MAP: 0.550, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.583, MAP: 0.579, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.591, MAP: 0.584, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.564, MAP: 0.557, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.571, MAP: 0.565, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.576, MAP: 0.573, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.575, MAP: 0.569, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.565, MAP: 0.559, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.570, MAP: 0.565, time: 71s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.564, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.584, MAP: 0.582, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.592, MAP: 0.585, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.578, MAP: 0.576, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.586, MAP: 0.580, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.589, MAP: 0.580, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.577, MAP: 0.572, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.611, MAP: 0.602, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.633, MAP: 0.621, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.617, MAP: 0.605, time: 71s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.627, MAP: 0.621, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.650, MAP: 0.643, time: 638s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.686, MAP: 0.675, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.668, MAP: 0.655, time: 637s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.659, MAP: 0.646, time: 325s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.650, MAP: 0.643, time: 637s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.559, MAP: 0.554, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.568, MAP: 0.562, time: 652s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.564, MAP: 0.557, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.577, MAP: 0.568, time: 652s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.564, MAP: 0.558, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.566, MAP: 0.561, time: 85s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.585, MAP: 0.573, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.565, MAP: 0.559, time: 651s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.567, MAP: 0.561, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.565, time: 651s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.571, MAP: 0.569, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.594, MAP: 0.587, time: 651s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.561, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.583, MAP: 0.578, time: 651s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.577, MAP: 0.573, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.562, MAP: 0.556, time: 85s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.581, MAP: 0.577, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.583, MAP: 0.578, time: 652s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.579, MAP: 0.572, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.593, MAP: 0.589, time: 651s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.586, MAP: 0.581, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.588, MAP: 0.584, time: 651s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.578, MAP: 0.575, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.590, MAP: 0.582, time: 651s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.612, MAP: 0.605, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.626, MAP: 0.612, time: 651s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.621, MAP: 0.611, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.625, MAP: 0.614, time: 84s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.667, MAP: 0.655, time: 331s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.676, MAP: 0.663, time: 651s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.680, MAP: 0.668, time: 332s)Round - ( k:5, batch_size: 5, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.663, MAP: 0.653, time: 651s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.570, MAP: 0.564, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.568, MAP: 0.562, time: 626s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.556, MAP: 0.552, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.568, MAP: 0.560, time: 627s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.564, MAP: 0.553, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.569, MAP: 0.561, time: 627s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.544, MAP: 0.540, time: -247s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.561, MAP: 0.554, time: 627s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.573, MAP: 0.569, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.580, MAP: 0.576, time: 627s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.565, MAP: 0.559, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.577, MAP: 0.569, time: 626s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.568, MAP: 0.565, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.582, MAP: 0.575, time: 627s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.561, MAP: 0.554, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.568, MAP: 0.563, time: 627s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.587, MAP: 0.580, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.591, MAP: 0.584, time: 60s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.567, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.594, MAP: 0.587, time: 627s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.588, MAP: 0.583, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.598, MAP: 0.591, time: 627s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.600, MAP: 0.592, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.585, MAP: 0.580, time: 627s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.603, MAP: 0.593, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.601, MAP: 0.593, time: 626s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.636, MAP: 0.626, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.615, MAP: 0.605, time: 626s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.664, MAP: 0.652, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.656, MAP: 0.640, time: 57s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.659, MAP: 0.646, time: 319s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.664, MAP: 0.656, time: 626s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.559, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.550, MAP: 0.544, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.574, MAP: 0.565, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.562, MAP: 0.553, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.568, MAP: 0.559, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.564, MAP: 0.556, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.560, MAP: 0.554, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.010, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.572, MAP: 0.564, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.561, MAP: 0.561, time: -240s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.577, MAP: 0.571, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.569, MAP: 0.563, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.584, MAP: 0.577, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.571, MAP: 0.567, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.594, MAP: 0.587, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.561, MAP: 0.560, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.050, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.565, MAP: 0.562, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.601, MAP: 0.593, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.589, MAP: 0.586, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.581, MAP: 0.573, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.590, MAP: 0.582, time: 73s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.585, MAP: 0.582, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.580, MAP: 0.577, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.575, MAP: 0.568, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 0.100, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.587, MAP: 0.581, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 25 ) -> ( MRR: 0.644, MAP: 0.630, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.500, training_epochs: 50 ) -> ( MRR: 0.602, MAP: 0.590, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 25 ) -> ( MRR: 0.630, MAP: 0.618, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.200, training_epochs: 50 ) -> ( MRR: 0.646, MAP: 0.637, time: 640s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 25 ) -> ( MRR: 0.666, MAP: 0.656, time: 326s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.050, training_epochs: 50 ) -> ( MRR: 0.671, MAP: 0.659, time: 639s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 25 ) -> ( MRR: 0.663, MAP: 0.648, time: -240s)Round - ( k:5, batch_size: 10, learning_rate: 1.000, loss_margin: 0.010, training_epochs: 50 ) -> ( MRR: 0.663, MAP: 0.651, time: 640s)